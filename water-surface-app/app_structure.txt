water-surface-app/
├── public/                                     # Static files
│   └── vite.svg                                # Favicon
├── src/                                        # Source code
│   ├── api/                                    # API services
│   │   ├── httpClient.ts                       # Base API client with axios
│   │   └── calculationApi.ts                   # API for remote calculations (if needed)
│   ├── assets/                                 # Static assets
│   │   └── react.svg
│   ├── components/                             # Reusable UI components
│   │   ├── ui/                                 # Base UI components
│   │   │   ├── Button.tsx                      # Reusable button component
│   │   │   ├── Input.tsx                       # Reusable input component
│   │   │   ├── Select.tsx                      # Reusable select component
│   │   │   └── TabsContainer.tsx               # Generic tabs component
│   │   └── common/                             # Common components
│   │       ├── ErrorAlert.tsx                  # Error display component
│   │       └── LoadingSpinner.tsx              # Loading indicator
│   ├── config/                                 # App configuration
│   │   ├── constants.ts                        # Constants like gravitational acceleration
│   │   └── units.ts                            # Unit system handling
│   ├── features/                               # Feature-based modules
│   │   ├── calculator/                         # Water surface profile calculator feature
│   │   │   ├── components/                     # Calculator-specific components
│   │   │   │   ├── ChannelForm/                # Channel form components
│   │   │   │   │   ├── ChannelForm.tsx         # Main form component
│   │   │   │   │   ├── ChannelTypeSelector.tsx # Channel type selection
│   │   │   │   │   ├── GeometryInputs.tsx      # Geometry parameters section
│   │   │   │   │   ├── FlowInputs.tsx          # Flow parameters section
│   │   │   │   │   └── BoundaryConditions.tsx  # Boundary conditions section
│   │   │   │   ├── CalculatorTabs.tsx          # Tabs for calculator views
│   │   │   │   ├── CalculationControls.tsx     # Calculate and reset buttons
│   │   │   │   ├── CrossSectionView.tsx        # Cross-section visualization
│   │   │   │   ├── ProfileVisualization.tsx    # Profile visualization
│   │   │   │   ├── ResultsTable.tsx            # Results in tabular form
│   │   │   │   ├── WaterSurfaceVisualization.tsx  # 3D water surface visualization
│   │   │   │   └── ExportMenu.tsx              # Export functionality
│   │   │   ├── hooks/                          # Custom hooks for calculations
│   │   │   │   ├── useCalculation.ts           # Calculation process management
│   │   │   │   ├── useChannelCalculations.ts   # Hydraulic calculations
│   │   │   │   ├── useExport.ts                # Export functionality
│   │   │   │   ├── useResults.ts               # Results handling
│   │   │   │   └── useStandardCalculation.ts   # Results handling
│   │   │   ├── services/                       # [NEW DIRECTORY]
│   │   │   │   ├── calculationService.ts       # [NEW] Centralized calculation service
│   │   │   │   └── workerManager.ts             # [NEW] Web Worker adapter
│   │   │   ├── stores/                         # Redux state management
│   │   │   │   ├── types/                      # Type definitions
│   │   │   │   │   ├── channelTypes.ts         # Channel parameter types
│   │   │   │   │   └── resultTypes.ts          # Result and hydraulic jump types
│   │   │   │   ├── calculatorActions.ts        # Action creators
│   │   │   │   └── calculatorSlice.ts          # Redux slice for calculator
│   │   │   ├── types/                          # Type definitions for calculator
│   │   │   │   ├── hydraulicJumpTypes.ts       # Hydraulic jump specific types
│   │   │   │   ├── index.ts                    # General calculator types
│   │   │   │   ├── README.md                   # Documentation for water surface profile results
│   │   │   │   ├── resultTypes.ts              # General result types
│   │   │   │   └── workerTypes.ts              # General worker types
│   │   │   ├── utils/                          # Calculation utilities
│   │   │   │   ├── hydraulics/                 # Hydraulic calculations
│   │   │   │   │   ├── channelGeometry.ts      # Area, wetted perimeter, top width
│   │   │   │   │   ├── flowParameters.ts       # Froude, energy, friction slope
│   │   │   │   │   ├── criticalFlow.ts         # Critical depth calculations
│   │   │   │   │   ├── normalFlow.ts           # Normal depth calculations
│   │   │   │   │   ├── hydraulicJump.ts        # Hydraulic jump calculations
│   │   │   │   │   ├── standardStep.ts         # Standard step implementation
│   │   │   │   │   ├── README.md               # Documentation for standard step method
│   │   │   │   │   ├── standardStep/           # Modularized standard step method
│   │   │   │   │   │   ├── profileCalculator/  # Profile calculation modules
│   │   │   │   │   │   │   ├── index.ts        # Main profile calculator exports
│   │   │   │   │   │   │   ├── advancedCalculations.ts # Advanced options
│   │   │   │   │   │   │   ├── coreCalculator.ts # Core calculation logic
│   │   │   │   │   │   │   ├── initialConditions.ts # Setup for calculations
│   │   │   │   │   │   │   └── profileInterpolation.ts # Profile smoothing
│   │   │   │   │   │   ├── calculationCache.ts # Caching for expensive calculations
│   │   │   │   │   │   ├── calculationOptimizer.ts # Performance optimization
│   │   │   │   │   │   ├── index.ts            # Main exports and entry point
│   │   │   │   │   │   ├── jumpDetector.ts     # Hydraulic jump detection utilities
│   │   │   │   │   │   ├── profileUtils.ts     # Profile classification utilities
│   │   │   │   │   │   ├── profileCalculator.ts # Profile calculator utilities
│   │   │   │   │   │   ├── stepCalculator.ts   # Single step calculation logic
│   │   │   │   │   │   ├── transitionDetector.ts # Profile transitions detection
│   │   │   │   │   │   └──types.ts             # Type definitions
│   │   │   │   │   └── index.ts                # Re-exports for compatibility
│   │   │   │   └──  helpers.ts                 # Helper functions
│   │   │   ├── validators/                     # Input validation
│   │   │   │   └── inputValidators.ts          # Validation functions
│   │   │   ├── workers/                        # Web Worker
│   │   │   │   └── calculationWorker.ts        # Calculation Web Worker
│   │   │   └── Calculator.tsx                  # Main calculator component
│   │   ├── documentation/                      # Documentation feature
│   │   │   ├── components/
│   │   │   ├── pages/
│   │   │   └── routes/
│   │   └── about/                              # About feature
│   │       ├── components/
│   │       ├── pages/
│   │       └── routes/
│   ├── hooks/                                  # Global custom hooks
│   │   ├── useOutsideClick.ts                  # For closing dropdowns
│   │   └── useLocalStorage.ts                  # Local storage hook
│   ├── layouts/                                # Page layouts
│   │   └── MainLayout.tsx                      # Main layout with navigation
│   ├── pages/                                  # Top-level pages
│   │   ├── HomePage.tsx                        # Home page
│   │   ├── CalculatorPage.tsx                  # Calculator page
│   │   ├── DocumentationPage.tsx               # Documentation page
│   │   └── AboutPage.tsx                       # About page
│   ├── routes/                                 # App routing
│   │   └── index.tsx                           # Main router configuration
│   ├── services/                               # Business logic services
│   │   ├── export/                             # Export services
│   │   │   ├── exportToCsv.ts                  # CSV export
│   │   │   ├── exportToJson.ts                 # JSON export
│   │   │   ├── reportGenerator.ts              # Report generation
│   │   │   └── index.ts                        # Service exports
│   │   ├── exportService.ts                    # Main export service
│   │   └── webWorkers/                         # Web workers
│   │       └── standardStepWorker.ts           # Worker for calculations
│   ├── stores/                                 # Redux store configuration
│   │   ├── index.ts                            # Store configuration
│   │   └── hooks.ts                            # useAppDispatch & useAppSelector
│   ├── styles/                                 # Global styles
│   │   └── tailwind.css                        # Global tailwind imports
│   ├── tests/                                  # Test files
│   │   ├── utils/
│   │   │   └── hydraulics/                     # Tests for hydraulic calculations
│   │   │       ├── channelGeometry.test.ts     # Channel geometry tests
│   │   │       ├── flowParameters.test.ts      # Flow parameters tests
│   │   │       └── standardStep.test.ts        # Standard step tests
│   │   └── components/
│   │       └── calculator/                     # Calculator component tests
│   ├── utils/                                  # Utility functions
│   │   ├── formatters.ts                       # Value formatting helpers
│   │   └── validation.ts                       # Generic validation helpers
│   ├── App.tsx                                 # Main app component
│   ├── App.css                                 # App styles
│   ├── index.css                               # Global CSS
│   ├── main.tsx                                # Entry point
│   └── vite-env.d.ts                           # Vite type definitions
├── .eslintrc.js                                # ESLint config
├── .gitignore                                  # Git ignore file
├── index.html                                  # HTML template
├── package.json                                # Dependencies
├── README.md                                   # Documentation
├── tailwind.config.js                          # Tailwind CSS config
├── tsconfig.json                               # TypeScript config
├── vite.config.ts                              # Vite config
└── postcss.config.js                           # PostCSS config